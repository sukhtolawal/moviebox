!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n():"function"==typeof define&&define.amd?define(n):n()}(0,function(){"use strict";var e=function(){var e=[0];return Array.isArray(window.consumeTime)&&window.consumeTime.length>0&&(e=window.consumeTime,window.consumeTime=[]),e},n=function(n,i){var t=window.pageId,o=e(),r={abilityName:"Api",renderId:t,target:"native",source:"render",dataJson:{methodName:n,dataJson:JSON.stringify({time:o})},time:(new Date).getTime()};i&&(r.dataJson.args=JSON.stringify(i));try{window.dltLocalChannel&&window.dltLocalChannel.callBridgeApi?window.dltLocalChannel.callBridgeApi(JSON.stringify(r)):console.log("callBridgeApi not support")}catch(e){console.log("callBridgeApi error",e)}},i=function(e){var i=["1000391591855976448","1000886706715795456"];i.includes(e)||n("preStrategy",{scene:"100008",preList:JSON.stringify(i)})},t=function(e){"1000886706715795456"!==e&&n("preStrategy",{scene:"100010",preList:JSON.stringify(["1000886706715795456"])})};!function(){try{if(window.dltLocalChannel&&window.dltLocalChannel.getMiniAppId){var e=window.dltLocalChannel.getMiniAppId();i(e),t(e)}else console.log("reportStrategy---not--support")}catch(e){console.log("reportStrategy error",e)}}()});
